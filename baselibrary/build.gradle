apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
// 这里添加下面两行代码。
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

apply from: rootProject.file('publish-mavencentral.gradle')

android {
    compileSdkVersion  rootProject.ext.android["compileSdkVersion"]
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8

        sourceCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

buildscript {
    repositories {
        jcenter()
    }
}
dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    annotationProcessor rootProject.ext.dependencies["glide-annotationProcessor"]
    //support
    api(rootProject.ext.dependencies["support-v4"]) {
        exclude module: 'support-annotations'
    }
    api(rootProject.ext.dependencies["appcompat-v7"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
    }
    api(rootProject.ext.dependencies["design"]) {
        exclude module: 'support-annotations'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
    }
    api rootProject.ext.dependencies["annotations"]
    testApi rootProject.ext.dependencies["junit"]
    //test
    api rootProject.ext.dependencies["timber"]
    api rootProject.ext.dependencies["constraintlayout"]
    api rootProject.ext.dependencies["androideventbus"]
    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["glide"]
    api rootProject.ext.dependencies["glide-okhttp"]

    api(rootProject.ext.dependencies["butterknife"]) {
        exclude module: 'support-annotations'
    }
    //请求
    api rootProject.ext.dependencies["OkGo"]
    api rootProject.ext.dependencies["Okrx"]
    api  rootProject.ext.dependencies["okserver"]
    //错误状态
    api  rootProject.ext.dependencies["loadinglayout"]
   /* //首页tab
    compile  rootProject.ext.dependencies["flycoTabLayout"]*/
    //下拉刷新
    api rootProject.ext.dependencies["SmartRefreshLayout"]
    api rootProject.ext.dependencies["SmartRefreshHeader"]
    api rootProject.ext.dependencies["SmartRefreshFooter"]
    api rootProject.ext.dependencies["calligraphy"]
    //轮播图
    api rootProject.ext.dependencies["bga-banner"]

    api rootProject.ext.dependencies["marqueeview"]

    //通用控件
    //  api  rootProject.ext.dependencies["pluginwidget"]
    //multidexmultidex
    api rootProject.ext.dependencies['multidex']
    //兼容动画库
    api rootProject.ext.dependencies["nineoldandroids"]
    //通用控件库
    api('com.lyb.besttimer:pluginwidget:0.0.136') {
        exclude module: 'recyclerview-v7'
    }
    /* //友盟
     compile 'com.umeng.analytics:analytics:latest.integration'
 //    compile 'com.tencent.bugly:crashreport:latest.release'
     //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
     compile 'com.tencent.bugly:crashreport_upgrade:1.3.4'
     //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0*/
    //compile 'com.tencent.bugly:nativecrashreport:latest.release'
    api 'com.yqritc:recyclerview-flexibledivider:1.4.0'
    api 'com.orhanobut:logger:1.15'
    api('cn.qqtheme.framework:WheelPicker:1.5.1') {
        exclude group: 'com.android.support'
    }

    api 'com.trello.rxlifecycle2:rxlifecycle:2.2.0' //
    api 'com.trello.rxlifecycle2:rxlifecycle-android:2.2.0'
    api 'com.trello.rxlifecycle2:rxlifecycle-components:2.0.1'

    //greendao依赖
    api 'org.greenrobot:greendao:3.3.0'
    api 'com.facebook.stetho:stetho:1.5.0'
    api 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    api 'top.zibin:Luban:1.1.3'
    api rootProject.ext.dependencies["baseUtils"]
}

retrolambda { jvmArgs '-noverify' }

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

//// 生成jarDoc的task，不需要修改。
//task javadoc(type: Javadoc) {
//    options.encoding = "utf-8"
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    // destinationDir = file("../javadoc/")
//    failOnError false // 忽略注释语法错误，如果用jdk1.8你的注释写的不规范就编译不过。
//}
//
//task javadocJar(type: Jar) {
//    classifier = 'javadoc'
//    from javadoc
//}
//
//task sourcesJar(type: Jar) {
//    classifier = 'sources'
//    from android.sourceSets.main.java.srcDirs
//}
//
//artifacts {
//    archives javadocJar, sourcesJar
//}